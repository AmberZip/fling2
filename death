local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
Players.CharacterAutoLoads = true

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local RootPart = Character:WaitForChild("HumanoidRootPart")

local flingEnabled = false
local BV = nil

-- UI toggle
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FlingToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 1, -50)
toggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 20
toggleButton.Text = "Fling: OFF"
toggleButton.Parent = screenGui

toggleButton.MouseButton1Click:Connect(function()
	flingEnabled = not flingEnabled
	toggleButton.Text = "Fling: " .. (flingEnabled and "ON" or "OFF")
end)

-- Clean tools
local function removeAllTools()
	for _, item in pairs(Character:GetChildren()) do
		if item:IsA("Tool") then
			item:Destroy()
		end
	end
end

-- Add BodyVelocity
local function applyBodyVelocity()
	if BV then
		BV:Destroy()
	end
	BV = Instance.new("BodyVelocity")
	BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
	BV.Velocity = Vector3.new(1e10, 1e10, 1e10)
	BV.Parent = RootPart
end

-- Clean up physics that can break respawn
local function cleanPhysics()
	for _, obj in ipairs(Character:GetDescendants()) do
		if obj:IsA("BodyMover") or obj:IsA("BodyVelocity") or obj:IsA("BodyPosition") then
			obj:Destroy()
		end
	end
end

-- Called on respawn
local function onCharacterAdded(char)
	Character = char
	char:WaitForChild("HumanoidRootPart")
	RootPart = char.HumanoidRootPart

	-- Clean up and reset state
	wait(0.1)
	cleanPhysics()
	removeAllTools()
	applyBodyVelocity()
end

LocalPlayer.CharacterAdded:Connect(onCharacterAdded)

-- Get nearest player under Y=250
local function getNearestTarget()
	local nearestPlayer = nil
	local nearestDist = math.huge
	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local targetRoot = player.Character.HumanoidRootPart
			if targetRoot.Position.Y <= 250 then
				local dist = (targetRoot.Position - RootPart.Position).Magnitude
				if dist < nearestDist then
					nearestDist = dist
					nearestPlayer = player
				end
			end
		end
	end
	return nearestPlayer
end

-- Fling logic
RunService.Heartbeat:Connect(function()
	if not flingEnabled then return end
	if not Character or not RootPart or not Character:FindFirstChild("Humanoid") or Character.Humanoid.Health <= 0 then return end

	-- Just in case tools or physics come back
	removeAllTools()
	if not BV or not BV.Parent then
		applyBodyVelocity()
	end

	local targetPlayer = getNearestTarget()
	if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local targetRoot = targetPlayer.Character.HumanoidRootPart
		local offset = Vector3.new(
			math.random(-10, 10) * 0.05,
			math.random(0, 10) * 0.1,
			math.random(-10, 10) * 0.05
		)
		RootPart.CFrame = CFrame.new(targetRoot.Position + offset)
	end
end)
